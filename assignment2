Task 1: Use map to convert an array of numbers into an array of their cubes.
Write a JavaScript function that takes an array of numbers as input and returns a new array containing the cubes of each number.

function cubeNumbers(numbers) {
    
    return numbers.map(num => num ** 3);
}


let numbers = [1, 2, 3, 4, 5];
let cubes = cubeNumbers(numbers);
console.log(cubes); 


Task 2: Use reduce to find the sum of all elements in an array.
Write a JavaScript function that takes an array of numbers as input and returns the sum of all elements.

function sumArray(numbers) {
   
    return numbers.reduce((accumulator, currentValue) => accumulator + currentValue, 0);
}


let numbers = [1, 2, 3, 4, 5];
let sum = sumArray(numbers);
console.log(sum); // Output: 15


Task 3: Use filter to find all prime numbers in an array.
Write a JavaScript function that takes an array of numbers as input and returns a new array containing only the prime numbers.

function findPrimes(numbers) {
   
    function isPrime(num) {
        if (num <= 1) return false;  // 1 and below are not prime numbers
        if (num <= 3) return true;   // 2 and 3 are prime numbers
        if (num % 2 === 0 || num % 3 === 0) return false;  // multiples of 2 and 3 are not prime
        
        // Check for prime numbers up to sqrt(num)
        for (let i = 5; i * i <= num; i += 6) {
            if (num % i === 0 || num % (i + 2) === 0) {
                return false;
            }
        }
        return true;
    }
    
    // Use filter to create a new array with only prime numbers
    return numbers.filter(num => isPrime(num));
}

// Example usage:
let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let primes = findPrimes(numbers);
console.log(primes); // Output: [2, 3, 5, 7]


Task 4: Use map, reduce, and filter to calculate the average of squared odd numbers in an array.
Write a JavaScript function that takes an array of numbers as input and calculates the average of the squares of all odd numbers in the array.

function averageOfSquaredOddNumbers(numbers) {
    // Filter odd numbers, square them, then calculate average
    let oddNumbersSquared = numbers
        .filter(num => num % 2 !== 0)  // Filter out odd numbers
        .map(num => num ** 2);          // Square each odd number
    
    if (oddNumbersSquared.length === 0) {
        return 0; // Return 0 if there are no odd numbers in the array
    }

    // Calculate average using reduce
    let sum = oddNumbersSquared.reduce((accumulator, currentValue) => accumulator + currentValue, 0);
    let average = sum / oddNumbersSquared.length;
    
    return average;
}

// Example usage:
let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let result = averageOfSquaredOddNumbers(numbers);
console.log(result); // Output: 25 // Explanation: Squares of odd numbers: [1, 9, 25, 49, 81]. Average = (1 + 9 + 25 + 49 + 81) / 5 = 25

